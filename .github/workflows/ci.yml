name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests with coverage
        run: npm run test:ci
        env:
          # Configuration Firebase factice pour les tests CI
          REACT_APP_FIREBASE_API_KEY: 'fake-api-key-for-ci-testing'
          REACT_APP_FIREBASE_AUTH_DOMAIN: 'test-project.firebaseapp.com'
          REACT_APP_FIREBASE_PROJECT_ID: 'test-project-id'
          REACT_APP_FIREBASE_STORAGE_BUCKET: 'test-project.appspot.com'
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: '123456789'
          REACT_APP_FIREBASE_APP_ID: '1:123456789:web:abcdef123456'
          REACT_APP_FIREBASE_MEASUREMENT_ID: 'G-ABCDEFGHIJ'
          REACT_APP_RECAPTCHA_V3_SITE_KEY: 'fake-recaptcha-key-for-testing'
          NODE_ENV: 'test'
          CI: 'true'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          # Configuration Firebase factice pour le build CI
          REACT_APP_FIREBASE_API_KEY: 'fake-api-key-for-ci-testing'
          REACT_APP_FIREBASE_AUTH_DOMAIN: 'test-project.firebaseapp.com'
          REACT_APP_FIREBASE_PROJECT_ID: 'test-project-id'
          REACT_APP_FIREBASE_STORAGE_BUCKET: 'test-project.appspot.com'
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: '123456789'
          REACT_APP_FIREBASE_APP_ID: '1:123456789:web:abcdef123456'
          REACT_APP_FIREBASE_MEASUREMENT_ID: 'G-ABCDEFGHIJ'
          NODE_ENV: 'production'
          CI: 'true'

      - name: Test build
        run: |
          ls -la build/
          [ -f build/index.html ] || exit 1

  deploy-staging:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to staging
        run: |
          echo "Déploiement vers l'environnement de staging"
          # Remplacer par votre commande de déploiement

  deploy-production:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Déploiement vers la production"
          # Remplacer par votre commande de déploiement Firebase/Vercel
